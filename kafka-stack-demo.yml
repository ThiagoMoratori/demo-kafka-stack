version: '2.1'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./kafka-stack-demo/zoo1/data:/data
      - ./kafka-stack-demo/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka-stack-demo/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
  
  # https://docs.confluent.io/current/installation/docker/config-reference.html#kafka-connect-configuration
  # https://docs.confluent.io/current/connect/references/allconfigs.html
  # https://docs.confluent.io/current/connect/transforms/index.html
  # https://docs.confluent.io/current/connect/kafka-connect-jdbc/source-connector/source_config_options.html
  # https://docs.confluent.io/current/connect/references/restapi.html
  # https://github.com/confluentinc/cp-docker-images/issues/467
  connect:
    image: confluentinc/cp-kafka-connect:5.4.0
    hostname: connect
    ports: 
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: LISTENER_DOCKER_INTERNAL://kafka1:19092
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
    volumes:
      - ./scripts:/scripts
    command: 
      - bash 
      - -c 
      - |
        /etc/confluent/docker/run & 
        echo "Waiting for Kafka Connect to start listening on kafka-connect ⏳"
        while : ; do
          curl_status=$$(curl -s -o /dev/null -w %{http_code} http://connect:8083/connectors)
          echo -e $$(date) " Kafka Connect listener HTTP state: " $$curl_status " (waiting for 200)"
          if [ $$curl_status -eq 200 ] ; then
            break
          fi
          sleep 5 
        done
        echo -e "\n--\n+> Creating Kafka Connector(s)"
        /scripts/create-connectors.sh
        sleep infinity
    depends_on:
      - kafka1
      - flyway

  # https://docs.confluent.io/current/ksql/docs/installation/install-ksql-with-docker.html
  # https://docs.confluent.io/current/ksql/docs/installation/server-config/index.html#restrict-ksql-interactive
  ksql:
    image: confluentinc/cp-ksql-server:5.4.0
    hostname: ksql
    environment:
      KSQL_BOOTSTRAP_SERVERS: LISTENER_DOCKER_INTERNAL://kafka1:19092
      KSQL_KSQL_SERVICE_ID: ksql_1_
      KSQL_KSQL_QUERIES_FILE: /sql/queries.sql
    volumes:
        - ./ksql/queries.sql:/sql/queries.sql
    depends_on:
      - kafka1

  postgres:
    image: postgres:9.6.17-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rechargedb

  flyway:
    image: flyway/flyway:6.2.3-alpine
    command: -url=jdbc:postgresql://postgres/rechargedb -user=postgres -password=postgres -connectRetries=60 migrate
    volumes:
      - ./migration/sql:/flyway/sql
    depends_on:
      - postgres
  
  